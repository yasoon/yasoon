// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['controllers/base/controller', 'views/page/admin/blank', 'models/blankQuestion/queue', 'views/blankQuestion/queue', 'models/blankQuestion/model', 'views/blankQuestion/view'], function(Controller, AdminBlankPageView, BlankQuestionsQueue, BlankQuestionsQueueView, BlankQuestion, BlankQuestionView) {
  'use strict';
  var AdminController;
  return AdminController = (function(_super) {

    __extends(AdminController, _super);

    function AdminController() {
      return AdminController.__super__.constructor.apply(this, arguments);
    }

    AdminController.prototype.blankAction = function() {
      var blankQuestionsView,
        _this = this;
      blankQuestionsView = new AdminBlankPageView();
      this.queue = new BlankQuestionsQueue();
      return this.queue.fetch(function() {
        var newQuestion, newQuestionView, queueView;
        queueView = new BlankQuestionsQueueView({
          model: _this.queue
        });
        newQuestion = new BlankQuestion;
        newQuestion.data = {
          place: _this.queue.questions.length + 1
        };
        newQuestionView = new BlankQuestionView({
          model: newQuestion
        });
        newQuestionView.region = 'new';
        newQuestionView.setButtonMode();
        _this.subscribeEvent('blankQuestionAdded', function() {
          return newQuestion.data.place++;
        });
        return _this.subscribeEvent('blankQuestionDeleted', function() {
          return newQuestion.data.place--;
        });
      });
    };

    return AdminController;

  })(Controller);
});
