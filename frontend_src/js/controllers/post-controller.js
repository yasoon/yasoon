// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['controllers/base/controller', 'models/authorInfo', 'views/authorInfo-view', 'models/post', 'views/post-view'], function(Controller, AuthorInfo, AuthorInfoView, Post, PostView) {
  'use strict';
  var AuthorController;
  return AuthorController = (function(_super) {

    __extends(AuthorController, _super);

    function AuthorController() {
      return AuthorController.__super__.constructor.apply(this, arguments);
    }

    AuthorController.prototype.postAction = function(params) {
      var _this = this;
      this.post = new Post({
        id: params.id
      });
      return this.post.fetch(function() {
        var postView;
        postView = new PostView({
          model: _this.post
        });
        postView.container = '#center';
        postView.setPassiveMode();
        _this.authorInfo = new AuthorInfo({
          id: _this.post.data.authorId
        });
        return _this.authorInfo.fetch(function() {
          var infoView;
          return infoView = new AuthorInfoView({
            model: _this.authorInfo
          });
        });
      });
    };

    return AuthorController;

  })(Controller);
});
