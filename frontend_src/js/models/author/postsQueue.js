// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var AuthorPostsQueue;
  return AuthorPostsQueue = (function(_super) {

    __extends(AuthorPostsQueue, _super);

    function AuthorPostsQueue() {
      return AuthorPostsQueue.__super__.constructor.apply(this, arguments);
    }

    AuthorPostsQueue.prototype.initialize = function() {
      this.posts = [];
      return AuthorPostsQueue.__super__.initialize.apply(this, arguments);
    };

    AuthorPostsQueue.prototype.fetch = function(callback) {
      var fetchCallback,
        _this = this;
      this.fetchParams = {};
      this.fetchParams = {
        method: 'GET'
      };
      ({
        data: {}
      });
      this.url = function() {
        return "api/author/get_posts/" + this.id;
      };
      fetchCallback = function() {
        _this.posts = _this.data;
        return callback();
      };
      return this.request(fetchCallback);
    };

    return AuthorPostsQueue;

  })(Model);
});
