// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var AuthorPostsInfoModel;
  return AuthorPostsInfoModel = (function(_super) {

    __extends(AuthorPostsInfoModel, _super);

    function AuthorPostsInfoModel() {
      return AuthorPostsInfoModel.__super__.constructor.apply(this, arguments);
    }

    AuthorPostsInfoModel.prototype.name = 'AuthorPostsInfo';

    AuthorPostsInfoModel.prototype.initialize = function(params) {
      AuthorPostsInfoModel.__super__.initialize.call(this, params);
      return this.authorId = params.authorId;
    };

    AuthorPostsInfoModel.prototype.load = function(callback) {
      this.method = 'GET';
      this.url = function() {
        return 'api/author/get_short_info/' + this.authorId;
      };
      this.requestData = {};
      return this.request(callback);
    };

    AuthorPostsInfoModel.prototype.follow = function(callback) {
      this.method = 'GET';
      this.url = function() {
        return 'api/friends/add/' + this.authorId;
      };
      this.requestData = {};
      return this.request(callback);
    };

    AuthorPostsInfoModel.prototype.unfollow = function(callback) {
      this.method = 'GET';
      this.url = function() {
        return 'api/friends/delete/' + this.authorId;
      };
      this.requestData = {};
      return this.request(callback);
    };

    return AuthorPostsInfoModel;

  })(Model);
});
