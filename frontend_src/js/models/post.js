// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var Post;
  return Post = (function(_super) {

    __extends(Post, _super);

    function Post() {
      return Post.__super__.constructor.apply(this, arguments);
    }

    Post.prototype.url = function() {
      return "api/post/get/" + this.id;
    };

    Post.prototype.update = function() {
      return console.log('update');
    };

    Post.prototype.add = function() {
      this.fetchParams.method = "POST";
      return this.fetchParams.data = {
        authorId: this.data.authorId,
        caption: this.data.caption,
        preview: this.data.preview,
        text: this.data.text
      };
    };

    Post.prototype.sync = function() {
      if (this.data.id) {
        return this.update();
      } else {
        return this.add();
      }
    };

    return Post;

  })(Model);
});
