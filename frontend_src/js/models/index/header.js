// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var IndexHeaderModel, _ref;
  return IndexHeaderModel = (function(_super) {
    __extends(IndexHeaderModel, _super);

    function IndexHeaderModel() {
      _ref = IndexHeaderModel.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    IndexHeaderModel.prototype.name = 'IndexHeader';

    IndexHeaderModel.prototype.load = function(callback) {
      this.url = function() {
        return 'api/author/get_status_info';
      };
      this.method = 'GET';
      return this.request(callback);
    };

    IndexHeaderModel.prototype.logout = function(callback) {
      var logoutCallback,
        _this = this;
      this.url = function() {
        return 'logout';
      };
      this.method = 'GET';
      logoutCallback = function() {
        _this.access = 'ANON';
        return typeof callback === "function" ? callback() : void 0;
      };
      return this.request(logoutCallback);
    };

    return IndexHeaderModel;

  })(Model);
});
