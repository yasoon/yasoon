// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var AdminBlankQuestionTemplateModel;
  return AdminBlankQuestionTemplateModel = (function(_super) {

    __extends(AdminBlankQuestionTemplateModel, _super);

    function AdminBlankQuestionTemplateModel() {
      return AdminBlankQuestionTemplateModel.__super__.constructor.apply(this, arguments);
    }

    AdminBlankQuestionTemplateModel.prototype.update = function(callback) {
      var updateCallback,
        _this = this;
      this.method = 'POST';
      this.url = function() {
        return 'api/blank_question/update';
      };
      this.requestData = {
        model: {
          id: this.data.id,
          text: this.data.text
        }
      };
      updateCallback = function() {
        _this.publishEvent('modelUpdated', _this);
        return typeof callback === "function" ? callback() : void 0;
      };
      return this.request(updateCallback);
    };

    AdminBlankQuestionTemplateModel.prototype.add = function(callback) {
      var addCallback,
        _this = this;
      this.method = 'POST';
      this.url = function() {
        return 'api/blank_question_add';
      };
      this.requestData = {
        model: {
          text: this.data.text,
          place: this.data.place
        }
      };
      addCallback = function() {
        var addedModel;
        addedModel = new AdminBlankQuestionTemplateModel;
        addedModel.data = {
          id: _this.data.id,
          place: _this.data.place,
          text: _this.data.text
        };
        _this.data = {};
        _this.publishEvent('modelAdded', addedModel);
        return typeof callback === "function" ? callback() : void 0;
      };
      return this.request(addCallback);
    };

    AdminBlankQuestionTemplateModel.prototype["delete"] = function(callback) {
      var deleteCallback,
        _this = this;
      this.method = 'POST';
      this.url = function() {
        return 'api/blank_question/delete';
      };
      this.requestData = {
        model: {
          id: this.data.id
        }
      };
      deleteCallback = function() {
        _this.publishEvent('modelDeleted', _this.data.id);
        return typeof callback === "function" ? callback() : void 0;
      };
      return this.request(deleteCallback);
    };

    return AdminBlankQuestionTemplateModel;

  })(Model);
});
