// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['models/base/queue', 'models/admin/blank/questionTemplate'], function(Queue, QuestionTemplateModel) {
  'use strict';
  var AdminBlankQuestionTemplateQueueModel, _ref;
  return AdminBlankQuestionTemplateQueueModel = (function(_super) {
    __extends(AdminBlankQuestionTemplateQueueModel, _super);

    function AdminBlankQuestionTemplateQueueModel() {
      _ref = AdminBlankQuestionTemplateQueueModel.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AdminBlankQuestionTemplateQueueModel.prototype.name = 'AdminBlankQuestionTemplateQueue';

    AdminBlankQuestionTemplateQueueModel.prototype.elementName = 'AdminBlankQuestionTemplate';

    AdminBlankQuestionTemplateQueueModel.prototype.load = function(callback) {
      this.url = function() {
        return 'api/blank_question/get_blank';
      };
      this.method = 'GET';
      return AdminBlankQuestionTemplateQueueModel.__super__.load.call(this, callback);
    };

    AdminBlankQuestionTemplateQueueModel.prototype.updatePlaces = function(callback) {
      this.url = function() {
        return "api/blank_question/update_places";
      };
      this.method = 'POST';
      return AdminBlankQuestionTemplateQueueModel.__super__.updatePlaces.call(this, callback);
    };

    AdminBlankQuestionTemplateQueueModel.prototype.createElementModel = function(elData) {
      var model;
      model = new QuestionTemplateModel();
      model.data = elData;
      return model;
    };

    return AdminBlankQuestionTemplateQueueModel;

  })(Queue);
});
