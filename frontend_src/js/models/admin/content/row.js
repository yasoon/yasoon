// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var AdminContentRowModel;
  return AdminContentRowModel = (function(_super) {

    __extends(AdminContentRowModel, _super);

    function AdminContentRowModel() {
      return AdminContentRowModel.__super__.constructor.apply(this, arguments);
    }

    AdminContentRowModel.prototype.name = 'AdminContentRow';

    AdminContentRowModel.prototype.update = function(callback) {
      var updateCallback,
        _this = this;
      if (!this.validateNotNull('description', 'text')) {
        this.publishEvent('publicError', 'Текст и описание не могут быть пустыми');
        return;
      }
      this.method = 'POST';
      this.url = function() {
        return 'api/content/edit';
      };
      this.requestData = {
        model: {
          id: this.data.id,
          text: this.data.text,
          description: this.data.description
        }
      };
      updateCallback = function() {
        _this.publishEvent('modelUpdated', _this);
        return typeof callback === "function" ? callback() : void 0;
      };
      return this.request(updateCallback);
    };

    return AdminContentRowModel;

  })(Model);
});
