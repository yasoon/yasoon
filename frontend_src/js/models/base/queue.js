// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['models/base/model'], function(Model) {
  var Queue;
  return Queue = (function(_super) {

    __extends(Queue, _super);

    function Queue() {
      return Queue.__super__.constructor.apply(this, arguments);
    }

    Queue.prototype.data = {};

    Queue.prototype.elements = [];

    Queue.prototype.load = function(callback) {
      this.url = function() {
        return 'api/blank_question/get_blank';
      };
      this.method = 'GET';
      this.request(callback);
      return this.elements = this.data.sort(this.compare);
    };

    Queue.prototype.compare = function(a, b) {
      if (a.data.place < b.data.place) {
        return -1;
      } else {
        return 1;
      }
    };

    Queue.prototype.update = function() {
      return this.url = function() {
        return "api/blank_question/update_places";
      };
    };

    return Queue;

  })(Model);
});
