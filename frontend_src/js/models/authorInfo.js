// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/model'], function(Chaplin, Model) {
  'use strict';
  var AuthorInfo;
  return AuthorInfo = (function(_super) {

    __extends(AuthorInfo, _super);

    function AuthorInfo() {
      return AuthorInfo.__super__.constructor.apply(this, arguments);
    }

    AuthorInfo.prototype.fetch = function(callback) {
      this.url = function() {
        return "api/author/get_short_info/" + this.id;
      };
      return this.request(callback);
    };

    AuthorInfo.prototype.initialize = function() {
      AuthorInfo.__super__.initialize.apply(this, arguments);
      return this.subscribeEvent('postAdded', this.postAddedHandler);
    };

    AuthorInfo.prototype.postAddedHandler = function(post) {
      if (this.data.id === parseInt(post.authorId)) {
        this.data.posts++;
        return this.trigger('updated');
      }
    };

    return AuthorInfo;

  })(Model);
});
