// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/page-view', 'JST', 'views/footer', 'views/header/author_newPost', 'views/author/post', 'models/author/post'], function(PageView, JST, FooterView, HeaderView, PostView, Post) {
  'use strict';
  var AuthorNewPostInterviewPageView;
  return AuthorNewPostInterviewPageView = (function(_super) {

    __extends(AuthorNewPostInterviewPageView, _super);

    function AuthorNewPostInterviewPageView() {
      return AuthorNewPostInterviewPageView.__super__.constructor.apply(this, arguments);
    }

    AuthorNewPostInterviewPageView.prototype.className = 'postPage';

    AuthorNewPostInterviewPageView.prototype.regions = {
      '#queue': 'queue',
      'footer': 'footer',
      'header': 'header'
    };

    AuthorNewPostInterviewPageView.prototype.templateName = 'author_newPostInterview-page';

    AuthorNewPostInterviewPageView.prototype.events = {
      'click #toInterview': function() {
        return this.publishEvent('redirect', "#posts/new_interview");
      },
      'click #toPost': function() {
        return this.publishEvent('redirect', "#posts/new");
      }
    };

    AuthorNewPostInterviewPageView.prototype.render = function() {
      var footerView, headerView;
      AuthorNewPostInterviewPageView.__super__.render.apply(this, arguments);
      footerView = new FooterView();
      return headerView = new HeaderView();
    };

    return AuthorNewPostInterviewPageView;

  })(PageView);
});
