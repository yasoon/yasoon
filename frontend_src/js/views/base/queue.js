// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/view', 'JST', 'jqueryui'], function(View, JST, jqueryui) {
  'use strict';
  var QueueView;
  return QueueView = (function(_super) {

    __extends(QueueView, _super);

    function QueueView() {
      return QueueView.__super__.constructor.apply(this, arguments);
    }

    QueueView.prototype.autoRender = false;

    QueueView.prototype.regions = {
      '#elements': 'elements'
    };

    QueueView.prototype.render = function() {
      var element, _i, _len, _ref,
        _this = this;
      QueueView.__super__.render.apply(this, arguments);
      _ref = this.model.elements;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        element = _ref[_i];
        this.createElementView(element).setRegion('elements').render();
      }
      if (this.sortable) {
        return this.$el.find('.sortable').sortable({
          cursor: 'move',
          update: function() {
            return _this.updateOrder();
          }
        });
      }
    };

    QueueView.prototype.updateOrder = function() {
      return console.log('order updated');
    };

    QueueView.prototype.getTemplateData = function() {
      return {};
    };

    QueueView.prototype.createElementView = function() {
      throw "Abstract method 'createElementView' must be redefined";
    };

    return QueueView;

  })(View);
});
