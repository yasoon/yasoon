// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/editable', 'JST', 'views/author/newQuestion'], function(EditableView, JST, NewQuestionView) {
  'use strict';
  var NewInterviewQuestionView;
  return NewInterviewQuestionView = (function(_super) {

    __extends(NewInterviewQuestionView, _super);

    function NewInterviewQuestionView() {
      return NewInterviewQuestionView.__super__.constructor.apply(this, arguments);
    }

    NewInterviewQuestionView.prototype.templateName = 'author_newInterviewQuestion_view';

    NewInterviewQuestionView.prototype.region = 'newQuestion';

    NewInterviewQuestionView.prototype.events = {
      'keyup #body': function(e) {
        return this.model.data.answer = $(e.target).val();
      },
      'click #sendButton': function(e) {
        var _this = this;
        this.$el.find('#buttons').hide();
        return this.model.addInterview(function() {
          return _this.setButtonMode();
        });
      }
    };

    return NewInterviewQuestionView;

  })(NewQuestionView);
});
