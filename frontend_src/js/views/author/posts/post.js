// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/editable', 'JST', 'categories', 'jquery_hotkeys', 'bootstrap', 'bootstrap_wysiwyg', 'helper', 'jqueryui'], function(EditableView, JST, categories, hotkeys, bootstrap, bootstrapWysiwyg, helper, jqueryui) {
  'use strict';
  var AuthorPostsPostView, _ref;
  return AuthorPostsPostView = (function(_super) {
    __extends(AuthorPostsPostView, _super);

    function AuthorPostsPostView() {
      this.render = __bind(this.render, this);
      _ref = AuthorPostsPostView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AuthorPostsPostView.prototype.className = 'post';

    AuthorPostsPostView.prototype.templateName = 'author_posts_post';

    AuthorPostsPostView.prototype.modes = ['active', 'preview', 'passive', 'full'];

    AuthorPostsPostView.prototype.addCallback = function() {
      return this.publishEvent('redirect', "author/" + this.model.authorId + "/posts");
    };

    AuthorPostsPostView.prototype.updateCallback = function() {
      return this.publishEvent('redirect', "author/" + this.model.authorId + "/posts");
    };

    AuthorPostsPostView.prototype.getTemplateData = function() {
      var cat, cats, data, key;
      cats = {};
      for (key in categories) {
        cat = categories[key];
        if (key > 0) {
          cats[key] = cat;
        }
      }
      data = AuthorPostsPostView.__super__.getTemplateData.apply(this, arguments);
      data.categories = cats;
      return data;
    };

    AuthorPostsPostView.prototype.render = function() {
      var _this = this;
      AuthorPostsPostView.__super__.render.apply(this, arguments);
      return setTimeout(function() {
        return _this.activatedWysiwyg();
      }, 600);
    };

    AuthorPostsPostView.prototype.activatedWysiwyg = function() {
      return $('#editor').wysiwyg().bind('DOMNodeInserted DOMNodeRemoved keyup', function() {
        return $('#cleartxt').html(strip_tags($('#editor').html()));
      });
    };

    return AuthorPostsPostView;

  })(EditableView);
});
