// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/editable', 'JST', 'tinyEditor', 'handlebars'], function(EditableView, JST, TinyEditor, Handlebars) {
  'use strict';
  var QuestionView,
    _this = this;
  return QuestionView = (function(_super) {

    __extends(QuestionView, _super);

    function QuestionView() {
      var _this = this;
      this.getTemplateData = function() {
        return QuestionView.prototype.getTemplateData.apply(_this, arguments);
      };
      return QuestionView.__super__.constructor.apply(this, arguments);
    }

    QuestionView.prototype.templateName = 'author_question_view';

    QuestionView.prototype.autoRender = false;

    QuestionView.prototype.className = '';

    QuestionView.prototype.tagName = 'article';

    Handlebars.registerHelper('ifnot', function(condition, options) {
      console.log('no');
      if (!condition) {
        return options.fn(this);
      }
    });

    QuestionView.prototype.initialize = function() {
      return QuestionView.__super__.initialize.apply(this, arguments);
    };

    QuestionView.prototype.events = {
      'click #editButton': function(e) {
        console.log('as');
        return this.setActiveMode();
      },
      'keydown #body': function(e) {
        if (e.keyCode === 27) {
          return this.setPreviousMode();
        }
      },
      'keydown #caption': function(e) {
        if (e.keyCode === 27) {
          return this.setPreviousMode();
        }
      },
      'click #previewButton': function(e) {
        return this.setPassiveMode();
      },
      'keyup #body': function(e) {
        return this.model.data.answer = $(e.target).val();
      },
      'keyup #caption': function(e) {
        return this.model.data.caption = $(e.target).val();
      },
      'click #sendButton': function(e) {
        var _this = this;
        this.$el.find('#buttons').hide();
        return this.model.update(function() {
          return _this.setPreviousMode();
        });
      },
      'click #declineButton': function(e) {
        var _this = this;
        this.$el.find('#buttons').hide();
        return this.model["delete"](function() {
          return _this.dispose();
        });
      }
    };

    QuestionView.prototype.setActiveMode = function() {
      QuestionView.__super__.setActiveMode.apply(this, arguments);
      return this.$el.find('#body').focus();
    };

    QuestionView.prototype.getTemplateData = function() {
      return {
        question: this.model.data
      };
    };

    QuestionView.prototype.render = function() {
      QuestionView.__super__.render.apply(this, arguments);
      this.$el.attr('id', this.model.data.id);
      if (!this.model.data.answer) {
        return this.$el.attr('data-permission', 'author');
      }
    };

    return QuestionView;

  })(EditableView);
});
