// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/view', 'JST'], function(View, JST) {
  'use strict';
  var AuthorPostsQueue;
  return AuthorPostsQueue = (function(_super) {

    __extends(AuthorPostsQueue, _super);

    function AuthorPostsQueue() {
      return AuthorPostsQueue.__super__.constructor.apply(this, arguments);
    }

    AuthorPostsQueue.prototype.className = 'postQueue';

    AuthorPostsQueue.prototype.autoRender = true;

    AuthorPostsQueue.prototype.region = 'queue';

    AuthorPostsQueue.prototype.regions = {
      '#list': 'list'
    };

    AuthorPostsQueue.prototype.templateName = 'author_postsQueue';

    AuthorPostsQueue.prototype.addSortable = function() {
      var _this = this;
      if (this.authorized) {
        return this.$el.find('.posts').sortable({
          cursor: 'move',
          update: function() {}
        });
      } else {
        return this.$el.find('.posts').sortable('enable');
      }
    };

    AuthorPostsQueue.prototype.render = function() {
      AuthorPostsQueue.__super__.render.apply(this, arguments);
      return this.addSortable();
    };

    AuthorPostsQueue.prototype.softRender = function() {
      AuthorPostsQueue.__super__.softRender.apply(this, arguments);
      return this.addSortable();
    };

    AuthorPostsQueue.prototype.getTemplateData = function() {
      console.log(this.model.posts);
      return {
        posts: this.model.posts,
        authorized: this.authorized
      };
    };

    return AuthorPostsQueue;

  })(View);
});
