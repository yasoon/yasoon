// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/editable', 'jqueryui', 'jquery.ui.widget', 'jqueryupload', 'jqueryuploadiframetransport'], function(EditableView) {
  'use strict';
  var RegisterRegisterView, _ref;
  return RegisterRegisterView = (function(_super) {
    __extends(RegisterRegisterView, _super);

    function RegisterRegisterView() {
      this.continueRegistration = __bind(this.continueRegistration, this);
      this.updateCallback = __bind(this.updateCallback, this);
      this.addCallback = __bind(this.addCallback, this);
      _ref = RegisterRegisterView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    RegisterRegisterView.prototype.className = 'register';

    RegisterRegisterView.prototype.templateName = 'register';

    RegisterRegisterView.prototype.modes = ['active', 'active_step2'];

    RegisterRegisterView.prototype.addCallback = function() {
      return this.continueRegistration();
    };

    RegisterRegisterView.prototype.updateCallback = function() {};

    RegisterRegisterView.prototype.continueRegistration = function() {
      this.setMode('active_step2');
      return $('#fileuploadr').fileupload({
        dataType: 'json',
        autoUpload: true,
        number: 1,
        done: function(e, data) {
          var fileName;
          fileName = data.result.dir + data.result.file_name;
          return $(".files_success_upload").append('<img src="' + fileName + '" width="53" height="53"/>');
        }
      });
    };

    return RegisterRegisterView;

  })(EditableView);
});
