<?php

namespace Proxies\__CG__\Yasoon\Site\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class AuthorEntity extends \Yasoon\Site\Entity\AuthorEntity implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setFacebookId($facebookId)
    {
        $this->__load();
        return parent::setFacebookId($facebookId);
    }

    public function getFacebookId()
    {
        $this->__load();
        return parent::getFacebookId();
    }

    public function setVkontakteId($vkontakteId)
    {
        $this->__load();
        return parent::setVkontakteId($vkontakteId);
    }

    public function getVkontakteId()
    {
        $this->__load();
        return parent::getVkontakteId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setPosts($posts)
    {
        $this->__load();
        return parent::setPosts($posts);
    }

    public function getPosts()
    {
        $this->__load();
        return parent::getPosts();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDream($dream)
    {
        $this->__load();
        return parent::setDream($dream);
    }

    public function getDream()
    {
        $this->__load();
        return parent::getDream();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setInterest($interest)
    {
        $this->__load();
        return parent::setInterest($interest);
    }

    public function getInterest()
    {
        $this->__load();
        return parent::getInterest();
    }

    public function setJob($job)
    {
        $this->__load();
        return parent::setJob($job);
    }

    public function getJob()
    {
        $this->__load();
        return parent::getJob();
    }

    public function setPublicationDate($publicationDate)
    {
        $this->__load();
        return parent::setPublicationDate($publicationDate);
    }

    public function getPublicationDate()
    {
        $this->__load();
        return parent::getPublicationDate();
    }

    public function setQuestions($questions)
    {
        $this->__load();
        return parent::setQuestions($questions);
    }

    public function getQuestions()
    {
        $this->__load();
        return parent::getQuestions();
    }

    public function getFriends()
    {
        $this->__load();
        return parent::getFriends();
    }

    public function setFriends($friends)
    {
        $this->__load();
        return parent::setFriends($friends);
    }

    public function getWriters()
    {
        $this->__load();
        return parent::getWriters();
    }

    public function setWriters($writers)
    {
        $this->__load();
        return parent::setWriters($writers);
    }

    public function setSubscribed($subscribed)
    {
        $this->__load();
        return parent::setSubscribed($subscribed);
    }

    public function getSubscribed()
    {
        $this->__load();
        return parent::getSubscribed();
    }

    public function setInterviewCaption($interviewCaption)
    {
        $this->__load();
        return parent::setInterviewCaption($interviewCaption);
    }

    public function getInterviewCaption()
    {
        $this->__load();
        return parent::getInterviewCaption();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setHomepage($homepage)
    {
        $this->__load();
        return parent::setHomepage($homepage);
    }

    public function getHomepage()
    {
        $this->__load();
        return parent::getHomepage();
    }

    public function setImg($img)
    {
        $this->__load();
        return parent::setImg($img);
    }

    public function getImg()
    {
        $this->__load();
        return parent::getImg();
    }

    public function setNewpass($newpass)
    {
        $this->__load();
        return parent::setNewpass($newpass);
    }

    public function getNewpass()
    {
        $this->__load();
        return parent::getNewpass();
    }

    public function setSalt($salt)
    {
        $this->__load();
        return parent::setSalt($salt);
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function eraseCredentials()
    {
        $this->__load();
        return parent::eraseCredentials();
    }

    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function unserialize($serialized)
    {
        $this->__load();
        return parent::unserialize($serialized);
    }

    public function setRole($role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function equals(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->__load();
        return parent::equals($user);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'email', 'subscribed', 'description', 'publicationDate', 'job', 'dream', 'interest', 'img', 'homepage', 'interviewCaption', 'password', 'salt', 'role', 'newpass', 'facebookId', 'vkontakteId', 'posts', 'questions', 'friends', 'writers');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}